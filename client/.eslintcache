[{"/home/sid/coding-projects/socialMittens/client/src/index.js":"1","/home/sid/coding-projects/socialMittens/client/src/reportWebVitals.js":"2","/home/sid/coding-projects/socialMittens/client/src/App.js":"3","/home/sid/coding-projects/socialMittens/client/src/pages/Home.js":"4","/home/sid/coding-projects/socialMittens/client/src/pages/CreatePost.js":"5","/home/sid/coding-projects/socialMittens/client/src/pages/Login.js":"6","/home/sid/coding-projects/socialMittens/client/src/pages/SignUp.js":"7","/home/sid/coding-projects/socialMittens/client/src/pages/OtherUserProfile.js":"8","/home/sid/coding-projects/socialMittens/client/src/reducers/userReducer.js":"9","/home/sid/coding-projects/socialMittens/client/src/components/NavBar.js":"10","/home/sid/coding-projects/socialMittens/client/src/pages/Profile.js":"11","/home/sid/coding-projects/socialMittens/client/src/pages/followingPosts.js":"12","/home/sid/coding-projects/socialMittens/client/src/pages/Settings.js":"13"},{"size":500,"mtime":1610844691510,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1610844691510,"results":"16","hashOfConfig":"15"},{"size":2412,"mtime":1613088813361,"results":"17","hashOfConfig":"15"},{"size":9034,"mtime":1613177523468,"results":"18","hashOfConfig":"15"},{"size":3980,"mtime":1611103523311,"results":"19","hashOfConfig":"15"},{"size":3530,"mtime":1612663647135,"results":"20","hashOfConfig":"15"},{"size":5071,"mtime":1613176775164,"results":"21","hashOfConfig":"15"},{"size":5963,"mtime":1612843034751,"results":"22","hashOfConfig":"15"},{"size":645,"mtime":1612237712438,"results":"23","hashOfConfig":"15"},{"size":1865,"mtime":1613088861089,"results":"24","hashOfConfig":"15"},{"size":2713,"mtime":1613036665248,"results":"25","hashOfConfig":"15"},{"size":8125,"mtime":1613033178657,"results":"26","hashOfConfig":"15"},{"size":3215,"mtime":1613094073125,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6u2vw3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sid/coding-projects/socialMittens/client/src/index.js",[],["60","61"],"/home/sid/coding-projects/socialMittens/client/src/reportWebVitals.js",[],"/home/sid/coding-projects/socialMittens/client/src/App.js",["62","63"],"/home/sid/coding-projects/socialMittens/client/src/pages/Home.js",["64","65","66","67","68","69","70","71","72"],"/home/sid/coding-projects/socialMittens/client/src/pages/CreatePost.js",["73"],"import {React, useState, useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\n\nconst CreatePost=() => {\n\n    //create history constant to route around\n    const history=useHistory()\n\n    //Create title state\n    const [title, setTitle]=useState(\"\")\n    const [body, setBody]=useState(\"\")\n    //this is where the file will be stored\n    const [image, setImage]=useState(\"\")\n    //This will update onces cloudinary returns the url.\n    const [imgURL, setImgURL]=useState(\"\")\n\n    //Use effect when the url is changed to make a createpost request on server\n    useEffect(() => {\n\n        //If the imgURL exists then create req on server to save\n        if (imgURL) {\n            //Save post on server\n            fetch(\"/createpost\", {\n                method: 'post',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    imgURL\n                })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data)\n                    if (data.error) {\n                        M.toast({html: data.error, classes: \"#d32f2f red lighten-2\"})\n                    }\n                    else {\n                        M.toast({html: \"Post uploaded sucessfully\", classes: \"#BAF2BB green lighten-2\"})\n                        history.push('/')\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    } , [imgURL])\n\n    //Function to post details of image file to Cloudinary\n    const postDetails=() => {\n        //use formdata because the image is a file\n        const data=new FormData()\n        //append the image file on data\n        data.append(\"file\", image)\n        //append the cloudinary project name\n        data.append(\"upload_preset\", 'Social-Mittens')\n        //append the cloudinary db name\n        data.append(\"cloud_name\", \"sidimages\")\n        //create an api request to cloudinary to upload the image data.\n        fetch(\"\thttps://api.cloudinary.com/v1_1/sidimages/image/upload\", {\n            method: 'post',\n            body: data\n        })\n            .then(res => res.json())\n            //once the data is converted to json set the url state to url given by cloudinary\n            .then(data => {\n                console.log(data)\n                setImgURL(data.url)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        return (\n            // Main Div for the form\n            <div className=\"card input-filed\" style={{\n                margin: \"30px auto\",\n                maxWidth: \"500px\",\n                padding: \"20px\",\n                textAlign: 'center'\n            }}>\n\n                <input type=\"text\" placeholder=\"title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n                <input type=\"text\" placeholder=\"Body\" value={body} onChange={(event) => setBody(event.target.value)} />\n                {/* File input */}\n                <div className=\"file-field input-field\">\n                    <div className=\"btn white\">\n                        <i class=\"material-icons\" style={{color: 'black'}} >attach_file</i>\n                        <input type=\"file\" onChange={(event) => setImage(event.target.files[0])} />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n                <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" onClick={() => postDetails()} >Submit Post\n                </button>\n            </div>\n        )\n}\n    export default CreatePost","/home/sid/coding-projects/socialMittens/client/src/pages/Login.js",["74","75","76","77"],"import {React, useState, useContext} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport {UserContext} from '../App'\n\nconst Login=() => {\n\n    //destructure the UserContext and get state and dispatch from it.\n    const {state, dispatch}=useContext(UserContext)\n\n    //initiallizing use History\n    const history=useHistory()\n\n    //Create States\n    const [password, setPassword]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [showPassword, setShow]=useState(\"password\")\n\n    //Function to post data using fetch\n    const PostData=() => {\n        //Email Check\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            return M.toast({html: \"Invalid Email\", classes: \"#d32f2f red lighten-2\"})\n        }\n        fetch(\"/signin\", {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                if (data.error) {\n                    M.toast({html: data.error, classes: \"#d32f2f red lighten-2\"})\n                }\n                else {\n                    console.log(data)\n                    //save the token passed by server to local storage\n                    localStorage.setItem(\"jwt\", data.token)\n\n                    //Save the user data to local storage\n                    localStorage.setItem(\"user\", JSON.stringify(data.user))\n\n                    //create a action called USER to change the global context state.\n                    dispatch({type: \"USER\", payload: data.user})\n\n                    M.toast({html: \"Signed in Sucessfully\", classes: \"#BAF2BB green lighten-2\"})\n                    //once the user has signed up take him to Login screen\n                    history.push('/')\n\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Function to show the password\n\n    const show=() => {\n        var checkBox=document.getElementById(\"checkbox\")\n\n        if (checkBox.checked==true) {\n            setShow(\"text\")\n        }\n        else{\n            setShow(\"password\")\n        }\n    }\n\n\n\n    return (\n        <div className=\"mycard\" >\n            <div className=\"card auth-card input-field\">\n                <h4 style={{padding: '30px'}}>Social Mittens</h4>\n                <input style={{}} type=\"text\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n\n\n                <input type={showPassword} placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n                <p>\n                    <label>\n                        <input type=\"checkbox\" id=\"checkbox\" onClick={show} />\n                        <span>Show password</span>\n                    </label>\n                </p>\n\n\n                <button style={{marginTop: '20px'}} className=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" onClick={() => PostData()}>Login\n                </button>\n            </div>\n\n            <div className=\"card auth-card\">\n                <h7>\n                    <Link to=\"/signup\">You dont have an account?</Link>\n                </h7>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","/home/sid/coding-projects/socialMittens/client/src/pages/SignUp.js",["78","79","80","81"],"/home/sid/coding-projects/socialMittens/client/src/pages/OtherUserProfile.js",["82","83"],"import React, {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../App'\nimport {useParams} from 'react-router-dom'\n\nconst OtherUserProfile=() => {\n\n    //use the context\n    const {state, dispatch}=useContext(UserContext)\n\n    //state to save all user posts\n    const [userProfile, setUserProfile]=useState()\n\n    //save user id from params.\n    const {userId}=useParams()\n\n    //Current user follow status if user id \n    const [following, setFollowing]=useState(state? state.following.includes(userId):false)\n\n    // on render get all user posts\n    useEffect(() => {\n\n        //fetch request to server to get all user posts and save them to local state .\n        fetch(`/user/${userId}`, {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                \n                setUserProfile(data)\n            })\n\n    }, [])\n\n    //Function to follow user.\n    const followUser=() => {\n        fetch('/follow', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": 'Bearer '+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                followId: userId\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                //dispatch followers and following to Context\n                dispatch({type: \"UPDATE\", payload: {following: data.following, followers: data.followers}})\n                localStorage.setItem(\"user\", JSON.stringify(data))\n                setUserProfile((prevState) => {\n                    return {\n                        ...prevState,\n                        user: {\n                            ...prevState.user,\n                            followers: [...prevState.user.followers, data._id]\n                        }\n                    }\n                })\n                setFollowing(true)\n            })\n    }\n\n    //Function to Unfollow user.\n    const unfollowUser=() => {\n        fetch('/unfollow', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": 'Bearer '+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                unfollowId: userId\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                //dispatch followers and following to Context\n                dispatch({type: \"UPDATE\", payload: {following: data.following, followers: data.followers}})\n                localStorage.setItem(\"user\", JSON.stringify(data))\n                setUserProfile((prevState) => {\n                    const newfollowers=prevState.user.followers.filter(item => item!==data._id)\n                    return {\n                        ...prevState,\n                        user: {\n                            ...prevState.user,\n                            followers: newfollowers\n                        }\n                    }\n                })\n                setFollowing(false)\n            })\n\n    }\n\n\n    return (\n\n        <>\n            {userProfile?\n                // Page Div\n                <div style={{maxWidth: '550px', margin: '0px auto'}}>\n                    {/* Image and details */}\n                    <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-around',\n                        margin: '18px 0px',\n                        borderBottom: '1px solid grey'\n                    }}>\n                        {/* Image div */}\n                        <div>\n                            <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\n                                src={state? userProfile.user.profilePicture:\"Loading...\"}\n                            />\n                        </div>\n                        {/* User details */}\n                        <div>\n                            <h4>\n                                {userProfile.user.name}\n                            </h4>\n                            <h4>\n                                {userProfile.user.email}\n                            </h4>\n                            <div style={{display: 'flex', justifyContent: 'space-between', width: '108%'}}>\n                                <h6>{userProfile.posts.length} posts</h6>\n                                <h6>{userProfile.user.followers.length} Followers</h6>\n                                <h6>{userProfile.user.following.length} Following</h6>\n                            </div>\n                            {following? <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" style={{margin: '10px'}}\n                                onClick={() => unfollowUser()} >\n                                Unfollow\n                            </button>\n                                :\n                                <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" style={{margin: '10px'}}\n                                    onClick={() => followUser()} >\n                                    Follow\n                            </button>}\n\n                        </div>\n                    </div>\n\n                    {/* Users Gallery */}\n                    <div className=\"gallery\">\n                        {\n                            userProfile.posts.map(post => {\n                                return (\n                                    <img key={post._id} className='gallery-item' src={post.image} alt={post.title} />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n\n\n\n                :<h2>Loading...</h2>}\n\n        </>\n    )\n}\n\nexport default OtherUserProfile","/home/sid/coding-projects/socialMittens/client/src/reducers/userReducer.js",[],"/home/sid/coding-projects/socialMittens/client/src/components/NavBar.js",["84","85"],"/home/sid/coding-projects/socialMittens/client/src/pages/Profile.js",["86","87","88"],"import React, {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../App'\n\nconst Profile=() => {\n\n    //use context to get access to user state\n    const {state, dispatch}=useContext(UserContext)\n\n    //state to save all user posts\n    const [myposts, setMyposts]=useState([])\n\n    //on render get all user posts\n    useEffect(() => {\n\n        //fetch request to server to get all user posts\n        fetch('/mypost', {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                setMyposts(data.posts)\n            })\n\n    }, [])\n\n    return (\n        // Page Div\n        <div style={{maxWidth: '550px', margin: '0px auto'}}>\n\n            {/* Image and details */}\n            <div style={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: '18px 0px',\n                borderBottom: '2px solid grey'\n            }}>\n                {/* Image div */}\n                <div className=\"img-hover\" >\n                    <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\n                        src={state? state.profilePicture:\"Loading...\"}\n                        className=\"image\"\n                    />\n                    {/* Image Update button */}\n                    <div className=\"hover-btn\" style={{marginLeft: '20px'}}>\n                        <a\n                            onClick={null} >\n                            <i className=\"material-icons\">add_a_photo</i>\n                        </a>\n                    </div>\n\n                </div>\n\n                {/* User details */}\n                <div>\n                    <h4>\n                        {state? state.name:\"loading user\"}\n                    </h4>\n                    <h5>{state? state.email:\"loading email\"}</h5>\n                    <div style={{display: 'flex', justifyContent: 'space-between', width: '108%'}}>\n                        <h6>{myposts.length} Post</h6>\n                        <h6>{state? state.followers.length:\"0\"} followers</h6>\n                        <h6>{state? state.following.length:\"0\"} following</h6>\n                    </div>\n                </div>\n            </div>\n\n            {/* Users Gallery */}\n            <div className=\"gallery\">\n                {\n                    myposts.map(post => {\n                        return (\n                            <img key={post._id} className='gallery-item' src={post.image} alt={post.title} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","/home/sid/coding-projects/socialMittens/client/src/pages/followingPosts.js",["89","90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../App\";\nimport M from \"materialize-css\";\nimport { Link } from \"react-router-dom\";\n\nconst FollowingPosts = () => {\n  //Post state\n  const [posts, setPosts] = useState([]);\n  const [postChange, setPostChange] = useState(false);\n\n  //Using context to get user\n  const { state, dispatch } = useContext(UserContext);\n\n  //On mount get posts from server\n  useEffect(() => {\n    //request to get all the post from server\n    fetch(\"/getfollowpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setPosts(result.posts);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [postChange]);\n\n  //Create a function to like a post.\n  const likePost = (id) => {\n    //Create a fetch request to like the post\n    fetch(\"/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        id: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        //if the ids match then return new data else return the old one\n        const newPosts = posts.map((item) => {\n          if (item._id == data._id) {\n            return data;\n          } else {\n            return item;\n          }\n        });\n        setPosts(newPosts);\n        setPostChange(!postChange)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  //Create a function to unlike a post.\n  const unlikePost = (id) => {\n    //Create a fetch request to like the post\n    fetch(\"/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        id: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        //if the ids match then return new data else return the old one\n        const newPosts = posts.map((item) => {\n          if (item._id == data._id) {\n            return data;\n          } else {\n            return item;\n          }\n        });\n        setPosts(newPosts);\n        setPostChange(!postChange)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  //Create a function to add comment on post.\n  const addComment = (comment, id) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        id: id,\n        comment: comment,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newPosts = posts.map((item) => {\n          if (item._id == result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setPosts(newPosts);\n        setPostChange(!postChange)\n        document.getElementById(\"comment\").value = \"\"\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  //Create a function to delete a post.\n  const deletePost = (id) => {\n    fetch(`/deletePost/${id}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = posts.filter((post) => {\n          if (post._id == result._id) {\n            return result;\n          } else {\n            return post;\n          }\n        });\n        setPosts(newData);\n        setPostChange(!postChange)\n      });\n  };\n\n  //Create a function to delete a comment.\n  const deleteComment = (postId, commentId) => {\n    fetch(`deleteComment/${postId}/${commentId}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        const newData = posts.filter((post) => {\n          if (post._id === result._id) {\n            return result;\n          } else {\n            return post;\n          }\n        });\n        setPosts(newData);\n        setPostChange(!postChange)\n      });\n  };\n\n  return (\n    // Main div\n    <div className=\"home\">\n      {posts.length === 0 && (\n        <div className=\"mycard\">\n          <div className=\"card auth-card\">\n            <h4 style={{ textAlign: \"center\" }}>Looks like you are lonely.</h4>\n            <h6 style={{ textAlign: \"center\", padding: \"20px\" }}>\n              Try Following someone first or look at random posts\n            </h6>\n            <a\n              className=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\"\n              style={{}}\n            >\n              <Link to=\"/explore\">Explore</Link>\n            </a>\n          </div>\n        </div>\n      )}\n\n      {posts.map((post) => {\n        return (\n          <div className=\"card home-card\" key={post._id}>\n            <h5>\n              <Link\n                to={\n                  post.postedBy._id == state._id\n                    ? \"/profile\"\n                    : `/profile/${post.postedBy._id}`\n                }\n              >\n                {post.postedBy.name}{\" \"}\n              </Link>\n              {\n                //expression to check weather the id of current user matches the post id.\n                post.postedBy._id == state._id && (\n                  <i\n                    className=\"material-icons\"\n                    style={{ float: \"right\" }}\n                    onClick={() => deletePost(post._id)}\n                  >\n                    delete\n                  </i>\n                )\n              }\n            </h5>\n\n            {/* Card image div */}\n            <div className=\"card-image\">\n              <img src={post.image} />\n            </div>\n            {/* Card contents */}\n            <div className=\"card-content\">\n              {/* Allow current user to only like a post once */}\n              {post.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  style={{ color: \"red\" }}\n                  onClick={() => {\n                    unlikePost(post._id);\n                  }}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i\n                  className=\"material-icons\"\n                  style={{ color: \"blue\" }}\n                  onClick={() => {\n                    likePost(post._id);\n                  }}\n                >\n                  thumb_up\n                </i>\n              )}\n\n              <h6>{post.likes.length} Likes</h6>\n              <h6>{post.title}</h6>\n              <p>{post.body}</p>\n\n              {post.comments.map((record) => {\n                return (\n                  <div>\n                    {record.postedBy._id === state._id && (\n                      <i\n                        className=\"material-icons\"\n                        style={{ float: \"right\" }}\n                        onClick={() => deleteComment(post._id, record._id)}\n                      >\n                        delete\n                      </i>\n                    )}\n                    <h6 key={record._id}>\n                      <span style={{ fontWeight: \"500\" }}>\n                        {record.postedBy.name}\n                      </span>{\" \"}\n                      {record.comment}\n                    </h6>\n                  </div>\n                );\n              })}\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  addComment(event.target[0].value, post._id);\n                }}\n              >\n                <input type=\"text\" id=\"comment\" placeholder=\"Add a comment\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FollowingPosts;\n","/home/sid/coding-projects/socialMittens/client/src/pages/Settings.js",["99","100","101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":26,"column":10,"nodeType":"111","messageId":"112","endLine":26,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":47,"column":6,"nodeType":"115","endLine":47,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":9},{"ruleId":"109","severity":1,"message":"118","line":13,"column":19,"nodeType":"111","messageId":"112","endLine":13,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":51,"column":33,"nodeType":"121","messageId":"122","endLine":51,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":84,"column":33,"nodeType":"121","messageId":"122","endLine":84,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":115,"column":33,"nodeType":"121","messageId":"122","endLine":115,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":142,"column":33,"nodeType":"121","messageId":"122","endLine":142,"endColumn":35},{"ruleId":"119","severity":1,"message":"120","line":185,"column":60,"nodeType":"121","messageId":"122","endLine":185,"endColumn":62},{"ruleId":"119","severity":1,"message":"120","line":188,"column":54,"nodeType":"121","messageId":"122","endLine":188,"endColumn":56},{"ruleId":"123","severity":1,"message":"124","line":199,"column":33,"nodeType":"125","endLine":199,"endColumn":57},{"ruleId":"113","severity":1,"message":"126","line":51,"column":9,"nodeType":"115","endLine":51,"endColumn":17,"suggestions":"127"},{"ruleId":"109","severity":1,"message":"110","line":9,"column":12,"nodeType":"111","messageId":"112","endLine":9,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":22,"column":24,"nodeType":"130","messageId":"131","endLine":22,"endColumn":25,"suggestions":"132"},{"ruleId":"128","severity":1,"message":"129","line":22,"column":49,"nodeType":"130","messageId":"131","endLine":22,"endColumn":50,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"120","line":66,"column":29,"nodeType":"121","messageId":"122","endLine":66,"endColumn":31},{"ruleId":"113","severity":1,"message":"134","line":22,"column":8,"nodeType":"115","endLine":22,"endColumn":13,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":24,"nodeType":"130","messageId":"131","endLine":54,"endColumn":25,"suggestions":"136"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":49,"nodeType":"130","messageId":"131","endLine":54,"endColumn":50,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"120","line":99,"column":29,"nodeType":"121","messageId":"122","endLine":99,"endColumn":31},{"ruleId":"113","severity":1,"message":"138","line":34,"column":8,"nodeType":"115","endLine":34,"endColumn":10,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"124","line":116,"column":29,"nodeType":"125","endLine":118,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":22,"column":13,"nodeType":"125","endLine":22,"endColumn":95},{"ruleId":"140","severity":1,"message":"141","line":47,"column":15,"nodeType":"125","endLine":51,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":7,"column":19,"nodeType":"111","messageId":"112","endLine":7,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":41,"column":21,"nodeType":"125","endLine":44,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":47,"column":25,"nodeType":"125","endLine":48,"endColumn":45},{"ruleId":"109","severity":1,"message":"117","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":9},{"ruleId":"109","severity":1,"message":"118","line":12,"column":18,"nodeType":"111","messageId":"112","endLine":12,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":48,"column":24,"nodeType":"121","messageId":"122","endLine":48,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":79,"column":24,"nodeType":"121","messageId":"122","endLine":79,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":110,"column":24,"nodeType":"121","messageId":"122","endLine":110,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":137,"column":24,"nodeType":"121","messageId":"122","endLine":137,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":181,"column":13,"nodeType":"125","endLine":184,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":197,"column":37,"nodeType":"121","messageId":"122","endLine":197,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":206,"column":35,"nodeType":"121","messageId":"122","endLine":206,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":220,"column":15,"nodeType":"125","endLine":220,"endColumn":39},{"ruleId":"109","severity":1,"message":"142","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":8,"column":19,"nodeType":"111","messageId":"112","endLine":8,"endColumn":27},{"ruleId":"109","severity":1,"message":"143","line":12,"column":12,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"144","line":12,"column":19,"nodeType":"111","messageId":"112","endLine":12,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":35,"column":45,"nodeType":"125","endLine":35,"endColumn":192},{"ruleId":"140","severity":1,"message":"141","line":41,"column":45,"nodeType":"125","endLine":41,"endColumn":100},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'M' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["148"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["149","150"],["151","152"],"React Hook useEffect has a missing dependency: 'UploadFields'. Either include it or remove the dependency array.",["153"],["154","155"],["156","157"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["158"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},{"messageId":"163","fix":"169","desc":"165"},{"messageId":"166","fix":"170","desc":"168"},{"desc":"171","fix":"172"},{"messageId":"163","fix":"173","desc":"165"},{"messageId":"166","fix":"174","desc":"168"},{"messageId":"163","fix":"175","desc":"165"},{"messageId":"166","fix":"176","desc":"168"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [dispatch, history]",{"range":"179","text":"180"},"Update the dependencies array to be: [body, history, imgURL, title]",{"range":"181","text":"182"},"removeEscape",{"range":"183","text":"184"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"185","text":"186"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"187","text":"184"},{"range":"188","text":"186"},"Update the dependencies array to be: [UploadFields, url]",{"range":"189","text":"190"},{"range":"191","text":"184"},{"range":"192","text":"186"},{"range":"193","text":"184"},{"range":"194","text":"186"},"Update the dependencies array to be: [userId]",{"range":"195","text":"196"},[1425,1427],"[dispatch, history]",[1724,1732],"[body, history, imgURL, title]",[652,653],"",[652,652],"\\",[677,678],[677,677],[601,606],"[UploadFields, url]",[1697,1698],[1697,1697],[1722,1723],[1722,1722],[978,980],"[userId]"]