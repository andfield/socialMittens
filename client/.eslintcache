[{"/home/sid/coding-projects/socialMittens/client/src/index.js":"1","/home/sid/coding-projects/socialMittens/client/src/reportWebVitals.js":"2","/home/sid/coding-projects/socialMittens/client/src/App.js":"3","/home/sid/coding-projects/socialMittens/client/src/pages/Home.js":"4","/home/sid/coding-projects/socialMittens/client/src/pages/CreatePost.js":"5","/home/sid/coding-projects/socialMittens/client/src/pages/Login.js":"6","/home/sid/coding-projects/socialMittens/client/src/pages/SignUp.js":"7","/home/sid/coding-projects/socialMittens/client/src/pages/OtherUserProfile.js":"8","/home/sid/coding-projects/socialMittens/client/src/reducers/userReducer.js":"9","/home/sid/coding-projects/socialMittens/client/src/components/NavBar.js":"10","/home/sid/coding-projects/socialMittens/client/src/pages/Profile.js":"11","/home/sid/coding-projects/socialMittens/client/src/pages/followingPosts.js":"12"},{"size":500,"mtime":1610844691510,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610844691510,"results":"15","hashOfConfig":"14"},{"size":2312,"mtime":1612840525444,"results":"16","hashOfConfig":"14"},{"size":8990,"mtime":1613032753143,"results":"17","hashOfConfig":"14"},{"size":3980,"mtime":1611103523311,"results":"18","hashOfConfig":"14"},{"size":3530,"mtime":1612663647135,"results":"19","hashOfConfig":"14"},{"size":5119,"mtime":1612843455861,"results":"20","hashOfConfig":"14"},{"size":5963,"mtime":1612843034751,"results":"21","hashOfConfig":"14"},{"size":645,"mtime":1612237712438,"results":"22","hashOfConfig":"14"},{"size":1864,"mtime":1613032753143,"results":"23","hashOfConfig":"14"},{"size":2328,"mtime":1613033638850,"results":"24","hashOfConfig":"14"},{"size":8125,"mtime":1613033178657,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6u2vw3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sid/coding-projects/socialMittens/client/src/index.js",[],["57","58"],"/home/sid/coding-projects/socialMittens/client/src/reportWebVitals.js",[],"/home/sid/coding-projects/socialMittens/client/src/App.js",["59","60"],"import React, {useEffect, createContext, useReducer, useContext} from 'react'\nimport './App.css'\nimport NavBar from './components/NavBar'\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './pages/Home'\nimport Profile from './pages/Profile'\nimport SignUP from './pages/SignUp'\nimport Login from './pages/Login'\nimport CreatePost from './pages/CreatePost'\nimport OtherUserProfile from './pages/OtherUserProfile'\nimport FollowingPosts from './pages/followingPosts'\nimport {reducer, initialState} from './reducers/userReducer'\n\n\n//Create a context [ type of global state ] and export it\nexport const UserContext=createContext()\n\n//create a seperate component for app routes\nconst AppRouting=() => {\n\n  //initiallize useHistory\n  const history=useHistory()\n\n  //destructure the UserContext and get state and dispatch from it.\n  const {state, dispatch}=useContext(UserContext)\n\n  //use effect to run when the component mounts for first time\n  useEffect(() => {\n    //get user from local storage\n    const user=JSON.parse(localStorage.getItem(\"user\"))\n\n    \n\n    //if user is   in local storage save him to context else to login\n    if (user) {\n\n      //create a action called USER to change the global context state.\n      dispatch({type: \"USER\", payload: user})\n\n      // history.push('/')\n    }\n    else {\n      history.push('/login')\n    }\n\n  }, [])\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={FollowingPosts}></Route>\n      <Route path=\"/profile\" exact component={Profile}></Route>\n      <Route path=\"/signup\" component={SignUP}></Route>\n      <Route path=\"/login\" component={Login}></Route>\n      <Route path=\"/create\" component={CreatePost}></Route>\n      <Route path=\"/profile/:userId\" component={OtherUserProfile}></Route>\n      <Route path=\"/explore\" component={Home}></Route>\n    </Switch>\n  )\n}\n\n\nfunction App() {\n\n  //initallize userReducer so when the context state changes the components re-render\n  const [state, dispatch]=useReducer(reducer, initialState)\n\n  return (\n\n    //Wrap everything with context so child components have access to state.\n    <UserContext.Provider value={{state, dispatch}}>\n      <BrowserRouter>\n        <NavBar />\n        <AppRouting />\n      </BrowserRouter>\n    </UserContext.Provider>\n  )\n}\n\nexport default App\n","/home/sid/coding-projects/socialMittens/client/src/pages/Home.js",["61","62","63","64","65","66","67","68","69"],"import React, {useState, useEffect, useContext} from 'react'\nimport {UserContext} from '../App'\nimport M from 'materialize-css'\nimport {Link} from 'react-router-dom'\n\nconst Home=() => {\n\n    //Post state\n    const [posts, setPosts]=useState([])\n    const [postChange, setPostChange]=useState(false)\n    //Using context to get user\n    const {state, dispatch}=useContext(UserContext)\n\n    //On mount get posts from server\n    useEffect(() => {\n\n        //request to get all the post from server\n        fetch('/allpost', {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            },\n        })\n            .then(res => res.json())\n            .then(result => {\n                setPosts(result.posts)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }, [postChange])\n\n    //Create a function to like a post.\n    const likePost=(id) => {\n\n        //Create a fetch request to like the post\n        fetch('/like', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                id: id\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                //if the ids match then return new data else return the old one\n                const newPosts=posts.map(item => {\n                    if (item._id==data._id) {\n                        return data\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setPosts(newPosts)\n                setPostChange(!postChange)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Create a function to unlike a post.\n    const unlikePost=(id) => {\n\n        //Create a fetch request to like the post\n        fetch('/unlike', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                id: id\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                //if the ids match then return new data else return the old one\n                const newPosts=posts.map(item => {\n                    if (item._id==data._id) {\n                        return data\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setPosts(newPosts)\n                setPostChange(!postChange)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Create a function to add comment on post.\n    const addComment=(comment, id) => {\n        fetch('/comment', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                id: id,\n                comment: comment\n            })\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result)\n                const newPosts=posts.map(item => {\n                    if (item._id==result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setPosts(newPosts)\n                setPostChange(!postChange)          \n                document.getElementById('comment').value = ''\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Create a function to delete a post.\n    const deletePost=(id) => {\n        fetch(`/deletePost/${id}`, {\n            method: \"delete\",\n            headers: {\n                Authorization: \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                console.log(result)\n                const newData=posts.filter(post => {\n                    if (post._id==result._id) {\n                        return result\n                    }\n                    else {\n                        return post\n                    }\n                })\n                setPosts(newData)\n                setPostChange(!postChange)\n            })\n    }\n\n    //Create a function to delete a comment.\n    const deleteComment=(postId, commentId) => {\n        fetch(`deleteComment/${postId}/${commentId}`, {\n            method: \"delete\",\n            headers: {\n                Authorization: \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                console.log(result)\n                const newData=posts.filter(post => {\n                    if (post._id===result._id) {\n                        return result\n                    }\n                    else {\n                        return post\n                    }\n                })\n                setPosts(newData)\n                setPostChange(!postChange)\n            })\n    }\n\n    return (\n        // Main div\n        <div className=\"home\">\n            {\n                posts.map(post => {\n                    return (\n                        <div className=\"card home-card\" key={post._id}>\n                            <h5><Link to={post.postedBy._id==state._id? '/profile':`/profile/${post.postedBy._id}`}>{post.postedBy.name} </Link>\n                                {\n                                    //expression to check weather the id of current user matches the post id.\n                                    post.postedBy._id==state._id\n                                    &&\n                                    <i className=\"material-icons\" style={{float: \"right\"}}\n                                        onClick={() => deletePost(post._id)}\n                                    >\n                                        delete</i>\n                                }\n                            </h5>\n\n                            {/* Card image div */}\n                            <div className=\"card-image\">\n                                <img src={post.image} />\n                            </div>\n                            {/* Card contents */}\n                            <div className=\"card-content\">\n\n                                {/* Allow current user to only like a post once */}\n                                {\n                                    post.likes.includes(state._id)?\n                                        <i className=\"material-icons\" style={{color: 'red'}} onClick={() => {unlikePost(post._id)}} >thumb_down</i>\n                                        :\n                                        <i className=\"material-icons\" style={{color: 'blue'}} onClick={() => {likePost(post._id)}} >thumb_up</i>\n                                }\n\n                                <h6>{post.likes.length} Likes</h6>\n                                <h6>{post.title}</h6>\n                                <p>{post.body}</p>\n\n                                {\n                                    post.comments.map(record => {\n                                        return (\n                                            <div>\n                                                {\n                                                    record.postedBy._id===state._id\n                                                    &&\n                                                    <i className=\"material-icons\" style={{float: \"right\"}}\n                                                        onClick={() => deleteComment(post._id, record._id)}\n                                                    >\n                                                        delete</i>\n                                                }\n                                                <h6 key={record._id}><span style={{fontWeight: \"500\"}}>{record.postedBy.name}</span> {record.comment}</h6>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    addComment(event.target[0].value, post._id)\n                                }}>\n                                    <input type=\"text\" id=\"comment\" placeholder=\"Add a comment\" />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n\n    )\n\n}\n\nexport default Home","/home/sid/coding-projects/socialMittens/client/src/pages/CreatePost.js",["70"],"import {React, useState, useEffect} from 'react'\nimport M from 'materialize-css'\nimport {useHistory} from 'react-router-dom'\n\nconst CreatePost=() => {\n\n    //create history constant to route around\n    const history=useHistory()\n\n    //Create title state\n    const [title, setTitle]=useState(\"\")\n    const [body, setBody]=useState(\"\")\n    //this is where the file will be stored\n    const [image, setImage]=useState(\"\")\n    //This will update onces cloudinary returns the url.\n    const [imgURL, setImgURL]=useState(\"\")\n\n    //Use effect when the url is changed to make a createpost request on server\n    useEffect(() => {\n\n        //If the imgURL exists then create req on server to save\n        if (imgURL) {\n            //Save post on server\n            fetch(\"/createpost\", {\n                method: 'post',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    imgURL\n                })\n            })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data)\n                    if (data.error) {\n                        M.toast({html: data.error, classes: \"#d32f2f red lighten-2\"})\n                    }\n                    else {\n                        M.toast({html: \"Post uploaded sucessfully\", classes: \"#BAF2BB green lighten-2\"})\n                        history.push('/')\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    } , [imgURL])\n\n    //Function to post details of image file to Cloudinary\n    const postDetails=() => {\n        //use formdata because the image is a file\n        const data=new FormData()\n        //append the image file on data\n        data.append(\"file\", image)\n        //append the cloudinary project name\n        data.append(\"upload_preset\", 'Social-Mittens')\n        //append the cloudinary db name\n        data.append(\"cloud_name\", \"sidimages\")\n        //create an api request to cloudinary to upload the image data.\n        fetch(\"\thttps://api.cloudinary.com/v1_1/sidimages/image/upload\", {\n            method: 'post',\n            body: data\n        })\n            .then(res => res.json())\n            //once the data is converted to json set the url state to url given by cloudinary\n            .then(data => {\n                console.log(data)\n                setImgURL(data.url)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n\n        return (\n            // Main Div for the form\n            <div className=\"card input-filed\" style={{\n                margin: \"30px auto\",\n                maxWidth: \"500px\",\n                padding: \"20px\",\n                textAlign: 'center'\n            }}>\n\n                <input type=\"text\" placeholder=\"title\" value={title} onChange={(event) => setTitle(event.target.value)} />\n                <input type=\"text\" placeholder=\"Body\" value={body} onChange={(event) => setBody(event.target.value)} />\n                {/* File input */}\n                <div className=\"file-field input-field\">\n                    <div className=\"btn white\">\n                        <i class=\"material-icons\" style={{color: 'black'}} >attach_file</i>\n                        <input type=\"file\" onChange={(event) => setImage(event.target.files[0])} />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n                <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" onClick={() => postDetails()} >Submit Post\n                </button>\n            </div>\n        )\n}\n    export default CreatePost","/home/sid/coding-projects/socialMittens/client/src/pages/Login.js",["71","72","73","74"],"import {React, useState, useContext} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport {UserContext} from '../App'\n\nconst Login=() => {\n\n    //destructure the UserContext and get state and dispatch from it.\n    const {state, dispatch}=useContext(UserContext)\n\n    //initiallizing use History\n    const history=useHistory()\n\n    //Create States\n    const [password, setPassword]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [showPassword, setShow]=useState(\"password\")\n\n    //Function to post data using fetch\n    const PostData=() => {\n        //Email Check\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            return M.toast({html: \"Invalid Email\", classes: \"#d32f2f red lighten-2\"})\n        }\n        fetch(\"/signin\", {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                password,\n                email\n            })\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                if (data.error) {\n                    M.toast({html: data.error, classes: \"#d32f2f red lighten-2\"})\n                }\n                else {\n                    console.log(data)\n                    //save the token passed by server to local storage\n                    localStorage.setItem(\"jwt\", data.token)\n\n                    //Save the user data to local storage\n                    localStorage.setItem(\"user\", JSON.stringify(data.user))\n\n                    //create a action called USER to change the global context state.\n                    dispatch({type: \"USER\", payload: data.user})\n\n                    M.toast({html: \"Signed in Sucessfully\", classes: \"#BAF2BB green lighten-2\"})\n                    //once the user has signed up take him to Login screen\n                    history.push('/')\n\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Function to show the password\n\n    const show=() => {\n        var checkBox=document.getElementById(\"checkbox\")\n\n        if (checkBox.checked==true) {\n            setShow(\"text\")\n        }\n        else{\n            setShow(\"password\")\n        }\n    }\n\n\n\n    return (\n        <div className=\"mycard\" >\n            <div className=\"card auth-card input-field\">\n                <h4 style={{padding: '30px'}}>Social Mittens</h4>\n                <input style={{}} type=\"text\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n\n\n                <input type={showPassword} placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n                <p>\n                    <label>\n                        <input type=\"checkbox\" id=\"checkbox\" onClick={show} />\n                        <span>Show password</span>\n                    </label>\n                </p>\n\n\n                <button style={{marginTop: '20px'}} className=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" onClick={() => PostData()}>Login\n                </button>\n            </div>\n\n            <div className=\"card auth-card\">\n                <h7>\n                    <Link to=\"/signup\">You dont have an account?</Link>\n                </h7>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","/home/sid/coding-projects/socialMittens/client/src/pages/SignUp.js",["75","76","77","78"],"import React, {useState, useEffect} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst SignUp=() => {\n\n    //initiallizing use History\n    const history=useHistory()\n\n    //Create States\n    const [name, setName]=useState(\"\")\n    const [password, setPassword]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [showPassword, setShow]=useState(\"password\")\n    const [image, setImage]=useState(\"\")\n    const [url, setImgURL]=useState(undefined)\n\n    useEffect(() => {\n        if (url) {\n            UploadFields()\n        }\n    }, [url])\n\n    //Function to upload profile picture\n    const UploadImage=() => {\n        //use formdata because the image is a file\n        const data=new FormData()\n        //append the image file on data\n        data.append(\"file\", image)\n        //append the cloudinary project name\n        data.append(\"upload_preset\", 'Social-Mittens')\n        //append the cloudinary db name\n        data.append(\"cloud_name\", \"sidimages\")\n        //create an api request to cloudinary to upload the image data.\n        fetch(\"\thttps://api.cloudinary.com/v1_1/sidimages/image/upload\", {\n            method: 'post',\n            body: data\n        })\n            .then(res => res.json())\n            //once the data is converted to json set the url state to url given by cloudinary\n            .then(data => {\n                console.log(data)\n                setImgURL(data.url)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Function to upload all the fields except image\n    const UploadFields=() => {\n\n        //Email Check\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            return M.toast({html: \"Invalid Email\", classes: \"#d32f2f red lighten-2\"})\n        }\n        fetch(\"/signup\", {\n            method: 'post',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name,\n                password,\n                email,\n                pic: url\n            })\n        }).then(res => res.json())\n            .then(data => {\n                if (data.error) {\n                    M.toast({html: data.error, classes: \"#d32f2f red lighten-2\"})\n                }\n                else {\n                    M.toast({html: data.message, classes: \"#BAF2BB green lighten-2\"})\n                    //once the user has signed up take him to Login screen\n                    history.push('/login')\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    //Function to post data using fetch\n    const PostData=() => {\n\n        //To make image upload optional\n        if (image) {\n            UploadImage()\n        }\n        else {\n            UploadFields()\n        }\n    }\n\n    //Function to show the password\n    const show=() => {\n        var checkBox=document.getElementById(\"checkbox\")\n\n        if (checkBox.checked==true) {\n            setShow(\"text\")\n        }\n        else {\n            setShow(\"password\")\n        }\n    }\n\n    return (\n        <div className=\"mycard\" >\n            <div class=\"card auth-card input-field\">\n                <h4 style={{padding: '30px'}}>Social Mittens</h4>\n                <input type=\"text\" placeholder=\"Name\" value={name} onChange={(event) => setName(event.target.value)} />\n                <input type=\"text\" placeholder=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n\n                {/* File input */}\n                <div className=\"file-field input-field\">\n                    <div className=\"btn white\">\n                        <i class=\"material-icons\" style={{color: 'black'}} >attach_file</i>\n                        <input type=\"file\" onChange={(event) => setImage(event.target.files[0])} />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" placeholder=\"Profile Picture\" />\n                    </div>\n                </div>\n                <input type={showPassword} placeholder=\"Password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n                <p>\n                    <label>\n                        <input type=\"checkbox\" id=\"checkbox\" onClick={show} />\n                        <span>Show password</span>\n                    </label>\n                </p>\n\n                {/* Submit button */}\n                <button style={{marginTop: '20px'}}\n                    className=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\"\n                    onClick={() => PostData()} >\n                    Sign Up\n                </button>\n            </div>\n            <div className=\"card auth-card\">\n                <h7>\n                    <Link to=\"/login\">You already have an account?</Link>\n                </h7>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp","/home/sid/coding-projects/socialMittens/client/src/pages/OtherUserProfile.js",["79","80"],"import React, {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../App'\nimport {useParams} from 'react-router-dom'\n\nconst OtherUserProfile=() => {\n\n    //use the context\n    const {state, dispatch}=useContext(UserContext)\n\n    //state to save all user posts\n    const [userProfile, setUserProfile]=useState()\n\n    //save user id from params.\n    const {userId}=useParams()\n\n    //Current user follow status if user id \n    const [following, setFollowing]=useState(state? state.following.includes(userId):false)\n\n    // on render get all user posts\n    useEffect(() => {\n\n        //fetch request to server to get all user posts and save them to local state .\n        fetch(`/user/${userId}`, {\n            headers: {\n                \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                \n                setUserProfile(data)\n            })\n\n    }, [])\n\n    //Function to follow user.\n    const followUser=() => {\n        fetch('/follow', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": 'Bearer '+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                followId: userId\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                //dispatch followers and following to Context\n                dispatch({type: \"UPDATE\", payload: {following: data.following, followers: data.followers}})\n                localStorage.setItem(\"user\", JSON.stringify(data))\n                setUserProfile((prevState) => {\n                    return {\n                        ...prevState,\n                        user: {\n                            ...prevState.user,\n                            followers: [...prevState.user.followers, data._id]\n                        }\n                    }\n                })\n                setFollowing(true)\n            })\n    }\n\n    //Function to Unfollow user.\n    const unfollowUser=() => {\n        fetch('/unfollow', {\n            method: 'put',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": 'Bearer '+localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                unfollowId: userId\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                //dispatch followers and following to Context\n                dispatch({type: \"UPDATE\", payload: {following: data.following, followers: data.followers}})\n                localStorage.setItem(\"user\", JSON.stringify(data))\n                setUserProfile((prevState) => {\n                    const newfollowers=prevState.user.followers.filter(item => item!==data._id)\n                    return {\n                        ...prevState,\n                        user: {\n                            ...prevState.user,\n                            followers: newfollowers\n                        }\n                    }\n                })\n                setFollowing(false)\n            })\n\n    }\n\n\n    return (\n\n        <>\n            {userProfile?\n                // Page Div\n                <div style={{maxWidth: '550px', margin: '0px auto'}}>\n                    {/* Image and details */}\n                    <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-around',\n                        margin: '18px 0px',\n                        borderBottom: '1px solid grey'\n                    }}>\n                        {/* Image div */}\n                        <div>\n                            <img style={{width: \"160px\", height: \"160px\", borderRadius: \"80px\"}}\n                                src={state? userProfile.user.profilePicture:\"Loading...\"}\n                            />\n                        </div>\n                        {/* User details */}\n                        <div>\n                            <h4>\n                                {userProfile.user.name}\n                            </h4>\n                            <h4>\n                                {userProfile.user.email}\n                            </h4>\n                            <div style={{display: 'flex', justifyContent: 'space-between', width: '108%'}}>\n                                <h6>{userProfile.posts.length} posts</h6>\n                                <h6>{userProfile.user.followers.length} Followers</h6>\n                                <h6>{userProfile.user.following.length} Following</h6>\n                            </div>\n                            {following? <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" style={{margin: '10px'}}\n                                onClick={() => unfollowUser()} >\n                                Unfollow\n                            </button>\n                                :\n                                <button class=\"btn waves-effect waves-light #F2BAC9 pink lighten-3\" style={{margin: '10px'}}\n                                    onClick={() => followUser()} >\n                                    Follow\n                            </button>}\n\n                        </div>\n                    </div>\n\n                    {/* Users Gallery */}\n                    <div className=\"gallery\">\n                        {\n                            userProfile.posts.map(post => {\n                                return (\n                                    <img key={post._id} className='gallery-item' src={post.image} alt={post.title} />\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n\n\n\n                :<h2>Loading...</h2>}\n\n        </>\n    )\n}\n\nexport default OtherUserProfile","/home/sid/coding-projects/socialMittens/client/src/reducers/userReducer.js",[],"/home/sid/coding-projects/socialMittens/client/src/components/NavBar.js",["81","82"],"/home/sid/coding-projects/socialMittens/client/src/pages/Profile.js",["83","84"],"/home/sid/coding-projects/socialMittens/client/src/pages/followingPosts.js",["85","86","87","88","89","90","91","92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":25,"column":10,"nodeType":"101","messageId":"102","endLine":25,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":46,"column":6,"nodeType":"105","endLine":46,"endColumn":8,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":9},{"ruleId":"99","severity":1,"message":"108","line":12,"column":19,"nodeType":"101","messageId":"102","endLine":12,"endColumn":27},{"ruleId":"109","severity":1,"message":"110","line":50,"column":33,"nodeType":"111","messageId":"112","endLine":50,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":83,"column":33,"nodeType":"111","messageId":"112","endLine":83,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":114,"column":33,"nodeType":"111","messageId":"112","endLine":114,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":141,"column":33,"nodeType":"111","messageId":"112","endLine":141,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":184,"column":60,"nodeType":"111","messageId":"112","endLine":184,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":187,"column":54,"nodeType":"111","messageId":"112","endLine":187,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":198,"column":33,"nodeType":"115","endLine":198,"endColumn":57},{"ruleId":"103","severity":1,"message":"116","line":51,"column":9,"nodeType":"105","endLine":51,"endColumn":17,"suggestions":"117"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":12,"nodeType":"101","messageId":"102","endLine":9,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":22,"column":24,"nodeType":"120","messageId":"121","endLine":22,"endColumn":25,"suggestions":"122"},{"ruleId":"118","severity":1,"message":"119","line":22,"column":49,"nodeType":"120","messageId":"121","endLine":22,"endColumn":50,"suggestions":"123"},{"ruleId":"109","severity":1,"message":"110","line":66,"column":29,"nodeType":"111","messageId":"112","endLine":66,"endColumn":31},{"ruleId":"103","severity":1,"message":"124","line":22,"column":8,"nodeType":"105","endLine":22,"endColumn":13,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"119","line":54,"column":24,"nodeType":"120","messageId":"121","endLine":54,"endColumn":25,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"119","line":54,"column":49,"nodeType":"120","messageId":"121","endLine":54,"endColumn":50,"suggestions":"127"},{"ruleId":"109","severity":1,"message":"110","line":99,"column":29,"nodeType":"111","messageId":"112","endLine":99,"endColumn":31},{"ruleId":"103","severity":1,"message":"128","line":34,"column":8,"nodeType":"105","endLine":34,"endColumn":10,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"114","line":116,"column":29,"nodeType":"115","endLine":118,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":22,"column":13,"nodeType":"115","endLine":22,"endColumn":95},{"ruleId":"130","severity":1,"message":"131","line":47,"column":15,"nodeType":"115","endLine":51,"endColumn":14},{"ruleId":"99","severity":1,"message":"108","line":7,"column":19,"nodeType":"101","messageId":"102","endLine":7,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":40,"column":21,"nodeType":"115","endLine":42,"endColumn":23},{"ruleId":"99","severity":1,"message":"107","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":9},{"ruleId":"99","severity":1,"message":"108","line":12,"column":18,"nodeType":"101","messageId":"102","endLine":12,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":48,"column":24,"nodeType":"111","messageId":"112","endLine":48,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":79,"column":24,"nodeType":"111","messageId":"112","endLine":79,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":110,"column":24,"nodeType":"111","messageId":"112","endLine":110,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":137,"column":24,"nodeType":"111","messageId":"112","endLine":137,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":181,"column":13,"nodeType":"115","endLine":184,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":197,"column":37,"nodeType":"111","messageId":"112","endLine":197,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":206,"column":35,"nodeType":"111","messageId":"112","endLine":206,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":220,"column":15,"nodeType":"115","endLine":220,"endColumn":39},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["134"],"'M' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["135"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["136","137"],["138","139"],"React Hook useEffect has a missing dependency: 'UploadFields'. Either include it or remove the dependency array.",["140"],["141","142"],["143","144"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"messageId":"150","fix":"151","desc":"152"},{"messageId":"153","fix":"154","desc":"155"},{"messageId":"150","fix":"156","desc":"152"},{"messageId":"153","fix":"157","desc":"155"},{"desc":"158","fix":"159"},{"messageId":"150","fix":"160","desc":"152"},{"messageId":"153","fix":"161","desc":"155"},{"messageId":"150","fix":"162","desc":"152"},{"messageId":"153","fix":"163","desc":"155"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [dispatch, history]",{"range":"166","text":"167"},"Update the dependencies array to be: [body, history, imgURL, title]",{"range":"168","text":"169"},"removeEscape",{"range":"170","text":"171"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"172","text":"173"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"174","text":"171"},{"range":"175","text":"173"},"Update the dependencies array to be: [UploadFields, url]",{"range":"176","text":"177"},{"range":"178","text":"171"},{"range":"179","text":"173"},{"range":"180","text":"171"},{"range":"181","text":"173"},"Update the dependencies array to be: [userId]",{"range":"182","text":"183"},[1385,1387],"[dispatch, history]",[1724,1732],"[body, history, imgURL, title]",[652,653],"",[652,652],"\\",[677,678],[677,677],[594,599],"[UploadFields, url]",[1690,1691],[1690,1690],[1715,1716],[1715,1715],[978,980],"[userId]"]